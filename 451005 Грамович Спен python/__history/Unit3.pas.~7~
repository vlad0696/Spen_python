unit Unit3;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Grids;

type
   tmas= array of ansichar;
   twords=array of string;
   tID=record
      id:string;
      amount:integer;
   end;
  Tspen_form = class(TForm)
    open_button: TButton;
    main_button: TButton;
    kod_memo: TMemo;
    OpenDialog1: TOpenDialog;
    StringGrid1: TStringGrid;
    procedure FormCreate(Sender: TObject);
    function input:tmas;
    function selection: twords;
    procedure main;
    procedure open_buttonClick(Sender: TObject);
    procedure main_buttonClick(Sender: TObject);
    procedure number_search(mas:twords);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  spen_form: Tspen_form;

implementation

{$R *.dfm}

procedure Tspen_form.FormCreate(Sender: TObject);
begin
   kod_memo.clear
end;

function Tspen_form.input: tmas;
var
   kod_file: textfile;
   i: integer;
   mas: tmas;
   temp: ansichar;
begin
   setlength(mas,0);
   assignfile(kod_file, spen_form.OpenDialog1.filename);
   reset(kod_file);
   i := 1;
   while not eof(kod_file) do
   begin
      setlength(mas, i);
      read(kod_file, temp);
      if temp='#' then
         readln(kod_file)
      else
      begin
         mas[i-1]:=temp;
         inc(i);
      end;
   end;
   closefile(kod_file);
   result:=mas;
end;


procedure Tspen_form.main;
var
   IDs:twords;
begin
   IDs:=selection;
   number_search(IDs);
end;

procedure Tspen_form.main_buttonClick(Sender: TObject);
begin
   main;
end;

procedure Tspen_form.number_search(mas: twords);
const
   check=['a'..'z', 'A'..'Z','_'];
var
   all_text:tmas;
   i, j, k, count, amount: integer;
   temp:string;
   IDs:array of tID;
begin
   all_text:=input;
   count:= length(mas);
   setlength(IDs, count);
   for i := 0 to count-1 do
      IDs[i].id:=mas[i];
   count:=length(all_text);
   for j := 0 to length(IDs)-1 do
      for i :=0  to count-1 do
      begin
         for k := 1 to length(IDs[j].id) do
            if all_text[i+k-1]=IDs[j].id[k] then
               inc(amount);
         if (all_text[i+k]in check) and (all_text[i-1]in check)  then
            dec(amount);
            if amount=length(IDs[j].id) then
               inc(IDs[j].amount);         
      end;
    showmessage('hi');  
end;

procedure Tspen_form.open_buttonClick(Sender: TObject);
begin
   if spen_form.OpenDialog1.Execute then
      kod_Memo.lines.LoadFromFile(spen_form.OpenDialog1.filename);
end;

function Tspen_form.selection: twords;
const
   pr=[' ', #10,#13];
   letters=['a'..'z', 'A'..'Z'];
var
   char_mas:tmas;
   i,j, count, amount:integer;
   word_mas, words, IDs:twords;
   temp, id:string;
begin
   char_mas:=input;
   count:=1;
   amount:=1;
   for I := 0 to length(char_mas) do
   begin
      setlength(word_mas,amount);
      if char_mas[i]= '=' then
      begin
         count:=i;
         while char_mas[count-1]=' ' do
         begin
            dec(count);
            j:=count-1;
            if char_mas[j] in letters then
               while char_mas[j] in letters do
               begin
                  word_mas[amount-1]:=char_mas[j]+word_mas[amount-1];
                  dec(j);
               end;
         end;
         inc(amount);
      end;
   end;
      count:=1;
   for I := 0 to length(word_mas)-1 do
      if (word_mas[i]<>'') and(word_mas[i]<>' ') then
      begin
         setlength(words, count);
         temp:=word_mas[i];
         for j:=1 to length(temp) do
            if temp[j]<>' ' then
               id:=id+temp[j];
         words[count-1]:=id;
         id:='';
         inc(count);
      end;
   count:=1;
   for I := 0 to length(words)-1 do
   begin
      if words[i]<>'' then
      begin
      setlength(ids,count);
      IDs[count-1]:=words[i];
      inc(count);
      for j := i+1 to length(words)-1 do
         if words[i]=words[j] then
            words[j]:='';
      end;
   end;
   result:=IDs;
end;

end.
